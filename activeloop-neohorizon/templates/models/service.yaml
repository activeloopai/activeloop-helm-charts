{{ $ns := include "final.namespace" . }}
{{- range $key, $val := .Values.models }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%s-svc" (include "chart.name" $) $key | kebabcase }}
  namespace: {{ $ns }}
  labels:
    app.kubernetes.io/name: {{ $key }}
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/part-of: {{ include "chart.name" $ }}
    helm.sh/chart: {{ $.Chart.Name }}
    {{- with $val.service.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with $val.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}

spec:
  type: {{ default "ClusterIP" $val.service.type }}

  {{- with $val.service.clusterIP }}
  clusterIP: {{ . }}
  {{- end }}

  {{- with $val.service.externalIPs }}
  externalIPs:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- with $val.service.loadBalancerIP }}
  loadBalancerIP: {{ . }}
  {{- end }}

  {{- with $val.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{- toYaml . | nindent 4 }}
  {{- end }}

  {{- if and (eq $val.service.type "LoadBalancer") $val.service.loadBalancerClass }}
  loadBalancerClass: {{ $val.service.loadBalancerClass | quote }}
  {{- end }}

  ports:
    - name: http
      port: {{ $val.service.port | default 80 }}
      targetPort: {{ $val.port | default 8000 }}
      protocol: TCP
    {{- if $val.service.nodePort }}
      nodePort: {{ $val.service.nodePort }}
    {{- end }}
    {{- with $val.service.additionalPorts }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  selector:
    app.kubernetes.io/name: {{ $key }}
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: {{ $.Release.Name }}
  {{- with $val.service.sessionAffinity }}
  sessionAffinity: {{ . }}
  {{- end }}
{{- end }}
